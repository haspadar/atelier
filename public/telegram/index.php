<?php

use Atelier\Check\Type;
use Atelier\Subscribers;
use Atelier\Telegram;

require_once '../../vendor/autoload.php';
date_default_timezone_set('Europe/Minsk');

$bot = new Telegram();
if ($bot->getClickedInlineButton() == Type::CRITICAL->name) {
    Subscribers::add([
        'chat_id' => $bot->getChatId(),
        'username' => $bot->getUsername(),
        'first_name' => $bot->getFirstName(),
        'check_types' => implode(',', [Type::CRITICAL->name])
    ]);
    $bot->sendText('–í–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å 09:00 –¥–æ 22:00');
} elseif ($bot->getClickedInlineButton() == Type::WARNING->name) {
    Subscribers::add([
        'chat_id' => $bot->getChatId(),
        'username' => $bot->getUsername(),
        'first_name' => $bot->getFirstName(),
        'check_types' => implode(',', [Type::CRITICAL->name, Type::WARNING->name])
    ]);
    $bot->sendText('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å 09:00 –¥–æ 22:00');
}  elseif ($bot->getClickedInlineButton() == Type::INFO->name) {
    Subscribers::add([
        'chat_id' => $bot->getChatId(),
        'username' => $bot->getUsername(),
        'first_name' => $bot->getFirstName(),
        'check_types' => implode(',', [Type::CRITICAL->name, Type::WARNING->name, Type::INFO->name])
    ]);
    $bot->sendText('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å 09:00 –¥–æ 22:00');
} elseif ($bot->isUnsubscribe($bot->getChatId())) {
    Subscribers::remove($bot->getChatId());
} elseif ($bot->isMessage()) {
    $exists = Subscribers::getByChatId($bot->getChatId());
    $bot->sendMessageWithInlineButtons(
        '–ü—Ä–∏–≤–µ—Ç, '
        . $bot->getFromFirstName()
        . '. –ö–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å?'
        . ($exists
            ? ' –°–µ–π—á–∞—Å —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å <strong>' .  Subscribers::getCheckTypesTitle($exists['check_types']) . '</strong>'
            : '–ü–æ–∫–∞ —Ç—ã –Ω–µ –ø–æ–ª—É—á–∞–µ—à—å –Ω–∏–∫–∞–∫–∏–µ.'
        ), [
            ['text'=> 'üî¥ ' . Subscribers::CRITICAL_TITLE, 'callback_data' => Type::CRITICAL->name],
            ['text'=> 'üîµ ' . Subscribers::WARNING_TITLE, 'callback_data' => Type::WARNING->name],
            ['text'=> '‚ö™ ' . Subscribers::ALL_TITLE, 'callback_data' => Type::INFO->name],
        ]
    );
}